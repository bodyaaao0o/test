name: Run Playwright tests for IA and AA

on:
  pull_request:
    branches:
      - staging
  push:
    branches:
      - main

jobs:
  setup:
    name: Cache only (no install)
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-primary-key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: penomo-tests-${{ hashFiles('penomo_tests/package-lock.json') }}
          restore-keys: |
            penomo-tests-

  desktop-tests:
    name: Run Desktop Tests
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: penomo-tests-${{ hashFiles('penomo_tests/package-lock.json') }}
          restore-keys: |
            penomo-tests-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run auth tests (Desktop)
        run: npx playwright test ./auth --project=chromium

      - name: Run E2E tests (Desktop)
        run: npx playwright test ./E2E --project=chromium

      - name: Upload Allure raw results (Desktop)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-desktop
          path: ./allure-results
          retention-days: 3

  mobile-tests:
    name: Run Mobile Tests
    runs-on: ubuntu-latest
    needs: desktop-tests
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: penomo-tests-${{ hashFiles('penomo_tests/package-lock.json') }}
          restore-keys: |
            penomo-tests-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run auth test (Mobile)
        run: npx playwright test ./auth/desktop-only --project=chromium

      - name: Run login test (Mobile)
        run: npx playwright test ./auth/login.spec.ts --project="Mobile Safari"

      - name: Run E2E tests (Mobile)
        run: npx playwright test ./E2E --project="Mobile Safari"

      - name: Upload Allure raw results (Mobile)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-mobile
          path: ./allure-results
          retention-days: 3

  notify-on-failure:
    name: Generate Allure Report & Notify
    runs-on: ubuntu-latest
    needs: [desktop-tests, mobile-tests]
    if: failure()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Desktop Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-desktop
          path: ./allure-results-merged

      - name: Download Mobile Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-mobile
          path: ./allure-results-merged

      - name: List downloaded files (debug)
        run: |
          echo "Contents of allure-results-merged:"
          find ./allure-results-merged -type f -name "*.json" | head -10
          echo "Total JSON files: $(find ./allure-results-merged -name "*.json" | wc -l)"

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Generate Allure Report
        run: |
          if [ -d "./allure-results-merged" ] && [ "$(find ./allure-results-merged -name "*.json" | wc -l)" -gt 0 ]; then
            npx allure generate ./allure-results-merged -o ./allure-report --clean
          else
            echo "No Allure results found to generate report"
            mkdir -p ./allure-report
            echo "<h1>No test results available</h1>" > ./allure-report/index.html
          fi

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report
          retention-days: 5

      - name: Extract failure reason
        run: |
          echo "Extracting failure reason from Allure..."
          REASON=""
          if [ -d "./allure-results-merged" ]; then
            REASON=$(find ./allure-results-merged -name "*.json" -exec jq -r 'select(.status=="failed") | .statusDetails.message // .statusDetails.trace // "Unknown failure"' {} \; 2>/dev/null | head -n 1 | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          fi
          if [ -z "$REASON" ]; then
            REASON="Test execution failed - check logs for details"
          fi
          echo "REASON=$REASON" >> $GITHUB_ENV

      - name: Send Slack notification on test failure
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \"‚ùå *Playwright tests failed* on *${{ github.ref_name }}*\\n*Reason:* \`\`\`${{ env.REASON }}\`\`\`\\nüîé <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View run>\\nüìä <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts|Download Allure Report>\" 
            }" ${{ secrets.SLACK_WEBHOOK_URL }}
